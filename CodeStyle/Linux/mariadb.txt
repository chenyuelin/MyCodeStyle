# 启动服务
systemctl start mariadb

重启服务
systemctl restart mariadb

# 设置开机自启动
systemctl enable mariadb

进行基本选项配置
mysql_secure_installation

https://mariadb.com/kb/en/library/configuring-mariadb-with-mycnf/#mycnf-hierarchy
https://mariadb.com/kb/en/library/server-system-variables/

show collation;(查看支持的字符集)

编码配置
# 编辑/etc/my.cnf(客户端与服务端通用配制)
vim /etc/my.cnf

# 在[mysqld]标签下添加下面内容
default-storage-engine = innodb
innodb_file_per_table
max_connections = 4096
collation-server = utf8_general_ci(gbk_chinese_ci)
character-set-server = utf8(gbk)

# 编辑/etc/my.cnf.d/client.cnf
vim /etc/my.cnf.d/client.cnf

# 在[client]标签下添加下面内容
default-character-set=utf8(gbk)

# 编辑/etc/my.cnf.d/mysql-clients.cnf
vim /etc/my.cnf.d/mysql-clients.cnf

# 在[mysql]标签下添加下面内容
default-character-set=utf8(gbk)

查看字符集
# 登录mysql之后，键入下面内容
show variables like "%character%";
show variables like "%collation%";
# 简单的查看命令
show status;

创建新数据库时进行编码设置
create database `database_name` default character set utf8 collate utf8_general_ci;

mysql set password for root='root';
flush privileges;
GRANT ALL PRIVILEGES ON jiradb.* TO 'jira'@'localhost' IDENTIFIED by 'jira';
revoke all on *.* from dba@localhost;
命令关闭sql服务
mysqladmin -u root -proot shutdown

centos7 安装mariadb最新版并配置
http://blog.csdn.net/buyaoxx/article/details/77370841
http://www.linuxprobe.com/centos7-mariadb10-easy.html
打开http://mirrors.aliyun.com/，查找mariadb，然后拼装地址http://mirrors.aliyun.com/mariadb/yum打开，点开你想要的版本，选择你的操作系统点进去。比较http://mirrors.aliyun.com/mariadb/yum/10.3/centos7-amd64/
vi /etc/yum.repos.d/MariaDB.repo
[mariadb]
name = MariaDB
baseurl = http://mirrors.aliyun.com/mariadb/yum/10.3/centos7-amd64/
gpgkey =  http://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB
gpgcheck = 1
yum -y install MariaDB-server MariaDB-client


优化
/etc/my.cnf.d/server.cnf
[mysqld]
max_connections(默认151)
告诉你当前你的服务器允许多少并发连接。

datadir=/opt/local/mysql/data(数据存放路径)

log_error=/var/log/mariadb/error.log

innodb_buffer_pool_size=1G(默认128mb)
缓存用户表及索引数据的最主要缓存空间，对Innodb整体性能影响也最大。无论是 MySQL 官方手册还是网络上很多人所分享的Innodb优化建议，如果是专用服务器，可以设置为整个系统物理内存的50%～80%之间。

tmp_table_size=256M(默认64mb)
设置内存表大小。

thread_concurrency=10(默认10)
数据库并发数

back_log=254(默认254)
back_log值指出在MySQL暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中。也就是说，如果MySql的连接数达到max_connections时，新来的请求将会被存在堆栈中，以等待某一连接释放资源
 
max_allowed_packet = 10M(可以使用默认值)
如果一条sql语句很长，或者包含BLOB数据，会造成内存溢出。在以上配置文件中添加或者修改以下变量

innodb_log_buffer_size(默认16m)
innodb_log_file_size(默认50m)
innodb_log_files_in_group(默认2)
innodb_log_group_home_dir
innodb_flush_log_at_trx_commit
https://www.cnblogs.com/z-books/p/4285375.html

innodb_flush_log_at_trx_commit(默认1,推荐2)
0：log buffer将每秒一次地写入log file中，并且log file的flush(刷到磁盘)操作同时进行。该模式下在事务提交的时候，不会主动触发写入磁盘的操作。
1：每次事务提交时MySQL都会把log buffer的数据写入log file，并且flush(刷到磁盘)中去，该模式为系统默认。
2：每次事务提交时MySQL都会把log buffer的数据写入log file，但是flush(刷到磁盘)操作并不会同时进行。该模式下，MySQL会每秒执行一次 flush(刷到磁盘)操作。

sync_binlog=n(默认0,可投为500或1000。主从库建议设为0或2，设为1最全安，是完全同步)
因为有了数据更新的binlog，所以可以用于实时备份，与master/slave复制。
这个参数直接影响mysql的性能和完整性
0:当事务提交后，Mysql仅仅是将binlog_cache中的数据写入Binlog文件，但不执行fsync之类的磁盘        同步指令通知文件系统将缓存刷新到磁盘，而让Filesystem自行决定什么时候来做同步，这个是性能最好的。
n:在进行n次事务提交以后，Mysql将执行一次fsync之类的磁盘同步指令，同志文件系统将Binlog文件缓存刷新到磁盘。
Mysql中默认的设置是sync_binlog=0，即不作任何强制性的磁盘刷新指令，这时性能是最好的，但风险也是最大的。一旦系统绷Crash，在文件系统缓存中的所有Binlog信息都会丢失
http://blog.csdn.net/z1988316/article/details/8095643
http://blog.itpub.net/22664653/viewspace-1063134/

innodb_file_per_table=1(最新版的默认为开，可以不分区时能把他关闭)
每张表一个数据文件

table_open_cache(默认2000)
>=max_connections

thread_cache_size(默认256)
客户端连接数缓存

skip_name_resolve(默认OFF，可改为ON)
https://www.cnblogs.com/ivictor/p/5311607.html

skip_external_locking(默认ON)

slow_query_log=1(开启慢日志,出现性能问题时可以开启)
slow_query_log_file =/var/log/mariadb/mysql-slow.log
long_query_time=5(默认为10)
超过5秒为慢查询


http://blog.51cto.com/xianglinhu/1702472
https://yq.aliyun.com/articles/59492


MyISAM
key_buffer_size=512M
MyISAM可以通过Key_buffer_size缓存索引,以大大提高访问性能,减少磁盘IO,但是这个缓存区只会缓存索引,而不会缓存数据.
bulk_insert_buffer_size=16M(8M8388608)指升myisam插入性能


全局
read_buffer_size=(128K131072)
read_rnd_buffer_size=(256K262144)

myisam_sort_buffer_size=256M(128M134216704)
innodb_sort_buffer_size=2M(1M1048576)

join_buffer_size=512K(256K262144 每个JOIN分区一个buffer)

max_length_for_sort_data=2K(1K1024)


sort_buffer_size=(2M2097152不设)
join_buffer_size(不设)