http://www.erlang.org
http://www.rabbitmq.com
http://www.rabbitmq.com/download.html
https://bintray.com/rabbitmq/rpm
https://packagecloud.io/rabbitmq

rpm安装
https://www.cnblogs.com/zqwang0929/p/3352237.html

erlang(编译安装与rabbitmq rpm安装有冲突，所以erlang也需要rpm安装)
编译安装erlang需要安装gcc-c++,perl,ncurses-devel,openssl-devel,unixODBC-devel
./configure (--without-javac --with-ssl=/usr/local/ssl/) --prefix=/opt/erlang 就会开始编译安装  会编译到 /opt/erlang 下然后执行 
make && make install
安装完成后输入erl命令

yum install -y socat logrotate
rpm -ivh rabbitmq-server-3.7.7-1.el7.noarch.rpm

sudo usermod -aG rabbitmq $USER

rabbitmq-server -detached start 后台方式运行
rabbitmqctl stop --停止运行
rabbitmqctl status --查看状态
rabbitmqctl stop_app
rabbitmqctl start_app

rabbitmq-plugins enable rabbitmq_management安装可视化插件
在web浏览器中输入地址：http://127.0.0.1:15672/
输入默认账号: guest   密码: guest(只能在本地登录)

#如果运行出现：Error when reading /var/lib/rabbitmq/.erlang.cookie: eacces
chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie


(1) 新增一个用户
rabbitmqctl add_user Username Password
(2) 删除一个用户
rabbitmqctl delete_user Username
(3) 修改用户的密码
rabbitmqctl change_password Username Newpassword
rabbitmqctl clear_password test //清除test用户的密码 
(4) 查看当前用户列表
rabbitmqctl list_users
设置用户角色的命令为：
rabbitmqctl set_user_tags User Tag
User为用户名， Tag为角色名(对应于上面的administrator,monitoring,policymaker,management,或其他自定义名称)。
也可以给同一用户设置多个角色，例如
rabbitmqctl set_user_tags hncscwc monitoring policymaker
(1) 设置用户权限
rabbitmqctl set_permissions -p VHostPath User ConfP WriteP ReadP
(2) 查看(指定hostpath)所有用户的权限信息
rabbitmqctl list_permissions [-p VHostPath]
(3) 查看指定用户的权限信息
rabbitmqctl list_user_permissions User
(4)  清除用户的权限信息
rabbitmqctl clear_permissions [-p VHostPath] User

添加virtual host
rabbitmqctl add_vhost /dev
为用户设置virtual host
rabbitmqctl set_permissions [-p vhostpath] {user} {conf} {write} {read}
conf:一个正则表达式match哪些配置资源能够被该用户访问。
write:一个正则表达式match哪些配置资源能够被该用户读。
read:一个正则表达式match哪些配置资源能够被该用户访问。
rabbitmqctl set_permissions -p /dev dev '.*' '.*' '.*'

rabbitmqctl stop_app
rabbitmqctl join_cluster --ram rabbit@queue
rabbitmqctl cluster_status

docker
https://docs.docker.com/samples/library/rabbitmq/
docker run -d -h=rabbitmq_25 --name=rabbitmq_25 -e TZ='Asia/Shanghai' -e "RABBITMQ_LOGS=/var/log/rabbitmq/rabbit.log" -e "RABBITMQ_SASL_LOGS=/var/log/rabbitmq/rabbit_sasl.log" --net=2c60878988ce --ip=192.168.2.25 d502f687f36a

docker run -d -h=rabbitmq --name=rabbitmq \
-e TZ='Asia/Shanghai' \
-e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin \
-e "RABBITMQ_LOGS=/var/lib/rabbitmq/rabbit.log" -e "RABBITMQ_SASL_LOGS=/var/lib/rabbitmq/rabbit_sasl.log" \
-e RABBITMQ_ERLANG_COOKIE='secret cookie here' -e RABBITMQ_NODENAME=rabbit@my-rabbit \
-e RABBITMQ_DEFAULT_VHOST=/dev \
-p 25672:25672 -p 15672:15672 -p 4369:4369 -p 5671:5671 -p 5672:5672 -p 61613:61613 \
-p 61614:61614 -p 8883:8883 -p 1883:1883 \


For SSL configuration without the management plugin:
RABBITMQ_SSL_CACERTFILE
RABBITMQ_SSL_CERTFILE
RABBITMQ_SSL_DEPTH
RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT
RABBITMQ_SSL_KEYFILE
RABBITMQ_SSL_VERIFY

For SSL configuration using the management plugin:
RABBITMQ_MANAGEMENT_SSL_CACERTFILE
RABBITMQ_MANAGEMENT_SSL_CERTFILE
RABBITMQ_MANAGEMENT_SSL_DEPTH
RABBITMQ_MANAGEMENT_SSL_FAIL_IF_NO_PEER_CERT
RABBITMQ_MANAGEMENT_SSL_KEYFILE
RABBITMQ_MANAGEMENT_SSL_VERIFY

/var/lib/rabbitmq